// Code generated by protoc-gen-go.
// source: github.com/dyzz/gobtclib/message/schema.proto
// DO NOT EDIT!

/*
Package message is a generated protocol buffer package.

It is generated from these files:
	github.com/dyzz/gobtclib/message/schema.proto

It has these top-level messages:
	ValueTransfer
	OpReturnMsg
	TxResult
	ProcessedTx
	ProcessedBlock
*/
package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ValueTransfer struct {
	Address string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Value   int32  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *ValueTransfer) Reset()                    { *m = ValueTransfer{} }
func (m *ValueTransfer) String() string            { return proto.CompactTextString(m) }
func (*ValueTransfer) ProtoMessage()               {}
func (*ValueTransfer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type OpReturnMsg struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *OpReturnMsg) Reset()                    { *m = OpReturnMsg{} }
func (m *OpReturnMsg) String() string            { return proto.CompactTextString(m) }
func (*OpReturnMsg) ProtoMessage()               {}
func (*OpReturnMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type TxResult struct {
	// Types that are valid to be assigned to Result:
	//	*TxResult_Transfer
	//	*TxResult_Msg
	Result isTxResult_Result `protobuf_oneof:"Result"`
}

func (m *TxResult) Reset()                    { *m = TxResult{} }
func (m *TxResult) String() string            { return proto.CompactTextString(m) }
func (*TxResult) ProtoMessage()               {}
func (*TxResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isTxResult_Result interface {
	isTxResult_Result()
}

type TxResult_Transfer struct {
	Transfer *ValueTransfer `protobuf:"bytes,1,opt,name=transfer,oneof"`
}
type TxResult_Msg struct {
	Msg *OpReturnMsg `protobuf:"bytes,2,opt,name=msg,oneof"`
}

func (*TxResult_Transfer) isTxResult_Result() {}
func (*TxResult_Msg) isTxResult_Result()      {}

func (m *TxResult) GetResult() isTxResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *TxResult) GetTransfer() *ValueTransfer {
	if x, ok := m.GetResult().(*TxResult_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *TxResult) GetMsg() *OpReturnMsg {
	if x, ok := m.GetResult().(*TxResult_Msg); ok {
		return x.Msg
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TxResult) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), []interface{}) {
	return _TxResult_OneofMarshaler, _TxResult_OneofUnmarshaler, []interface{}{
		(*TxResult_Transfer)(nil),
		(*TxResult_Msg)(nil),
	}
}

func _TxResult_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TxResult)
	// Result
	switch x := m.Result.(type) {
	case *TxResult_Transfer:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *TxResult_Msg:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Msg); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TxResult.Result has unexpected type %T", x)
	}
	return nil
}

func _TxResult_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TxResult)
	switch tag {
	case 1: // Result.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ValueTransfer)
		err := b.DecodeMessage(msg)
		m.Result = &TxResult_Transfer{msg}
		return true, err
	case 2: // Result.msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OpReturnMsg)
		err := b.DecodeMessage(msg)
		m.Result = &TxResult_Msg{msg}
		return true, err
	default:
		return false, nil
	}
}

type ProcessedTx struct {
	Txid   string      `protobuf:"bytes,1,opt,name=Txid" json:"Txid,omitempty"`
	Result []*TxResult `protobuf:"bytes,2,rep,name=Result" json:"Result,omitempty"`
}

func (m *ProcessedTx) Reset()                    { *m = ProcessedTx{} }
func (m *ProcessedTx) String() string            { return proto.CompactTextString(m) }
func (*ProcessedTx) ProtoMessage()               {}
func (*ProcessedTx) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ProcessedTx) GetResult() []*TxResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type ProcessedBlock struct {
	Txs []*ProcessedTx `protobuf:"bytes,1,rep,name=Txs" json:"Txs,omitempty"`
}

func (m *ProcessedBlock) Reset()                    { *m = ProcessedBlock{} }
func (m *ProcessedBlock) String() string            { return proto.CompactTextString(m) }
func (*ProcessedBlock) ProtoMessage()               {}
func (*ProcessedBlock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ProcessedBlock) GetTxs() []*ProcessedTx {
	if m != nil {
		return m.Txs
	}
	return nil
}

func init() {
	proto.RegisterType((*ValueTransfer)(nil), "message.ValueTransfer")
	proto.RegisterType((*OpReturnMsg)(nil), "message.OpReturnMsg")
	proto.RegisterType((*TxResult)(nil), "message.TxResult")
	proto.RegisterType((*ProcessedTx)(nil), "message.ProcessedTx")
	proto.RegisterType((*ProcessedBlock)(nil), "message.ProcessedBlock")
}

var fileDescriptor0 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0xcf, 0x4f, 0xc2, 0x30,
	0x14, 0xc7, 0x81, 0xc9, 0x0f, 0xdf, 0x44, 0x63, 0x63, 0x0c, 0xf1, 0xa4, 0xf5, 0x62, 0x4c, 0x5c,
	0x13, 0xb9, 0x7b, 0xe0, 0xc4, 0xc5, 0x68, 0x48, 0xe3, 0xbd, 0x6b, 0x9f, 0x65, 0x71, 0xa3, 0xa4,
	0xed, 0xcc, 0xe4, 0xaf, 0xb7, 0x6c, 0x63, 0x81, 0x63, 0xfb, 0x3e, 0xef, 0xf3, 0xfd, 0xb6, 0xf0,
	0xa2, 0x33, 0xbf, 0x2e, 0xd3, 0x44, 0x9a, 0x82, 0xa9, 0xbf, 0xdd, 0x8e, 0x69, 0x93, 0x7a, 0x99,
	0x67, 0x29, 0x2b, 0xd0, 0x39, 0xa1, 0x91, 0x39, 0xb9, 0xc6, 0x42, 0x24, 0x5b, 0x6b, 0xbc, 0x21,
	0xe3, 0xf6, 0x96, 0x32, 0x98, 0x7e, 0x89, 0xbc, 0x44, 0x6e, 0xc5, 0xc6, 0x7d, 0xa3, 0x25, 0x57,
	0x30, 0x16, 0x4a, 0xd9, 0x30, 0x9e, 0xf5, 0xef, 0xfb, 0x4f, 0xe7, 0x64, 0x0a, 0xc3, 0xdf, 0x3d,
	0x31, 0x1b, 0x84, 0xe3, 0x90, 0xde, 0x41, 0xfc, 0xb1, 0x5d, 0xa1, 0x2f, 0xed, 0xe6, 0xdd, 0x69,
	0x12, 0x43, 0x54, 0x38, 0xdd, 0xa0, 0x14, 0x61, 0xc2, 0xab, 0x15, 0xba, 0x32, 0xf7, 0xe4, 0x19,
	0x26, 0xbe, 0x75, 0xd6, 0xd3, 0xf8, 0xf5, 0x36, 0x69, 0x43, 0x93, 0x93, 0xc4, 0x65, 0x8f, 0x3c,
	0x36, 0x92, 0x41, 0x8d, 0xdd, 0x74, 0xd8, 0x51, 0xce, 0xb2, 0xb7, 0x98, 0xc0, 0xa8, 0x51, 0xd3,
	0x37, 0x88, 0x3f, 0xad, 0x91, 0x81, 0x42, 0xc5, 0x2b, 0x72, 0x01, 0x67, 0xbc, 0xca, 0x54, 0x5b,
	0xf7, 0xe1, 0x80, 0x05, 0x5d, 0x14, 0x74, 0xd7, 0x9d, 0xee, 0x50, 0x8d, 0xce, 0xe1, 0xb2, 0xdb,
	0x5f, 0xe4, 0x46, 0xfe, 0x84, 0xa5, 0x88, 0x57, 0xfb, 0x07, 0x47, 0x27, 0x05, 0x8e, 0x52, 0xd2,
	0x51, 0xfd, 0x71, 0xf3, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x89, 0x86, 0xc5, 0xab, 0x69, 0x01,
	0x00, 0x00,
}
